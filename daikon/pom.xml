<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.talend.daikon</groupId>
		<artifactId>daikon-parent</artifactId>
		<version>0.14.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>daikon</artifactId>
	<version>0.14.0-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>Daikon main shared library</name>
	<url>https://github.com/Talend/daikon</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<avro.version>1.8.0</avro.version>
		<java.version>1.7</java.version>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	    <jmh.version>1.15</jmh.version>
	    <uberjar.name>benchmarks</uberjar.name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.5.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>com.cedarsoftware</groupId>
			<artifactId>json-io</artifactId>
		</dependency>
		<dependency>
	        <groupId>org.ops4j.pax.url</groupId>
	        <artifactId>pax-url-aether</artifactId>     		
	        <version>2.4.7</version>
	        <optional>true</optional>
        </dependency>
		<dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${uberjar.name}</finalName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.openjdk.jmh.Main</mainClass>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <!--
                                        Shading signed JARs will fail without this.
                                        http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar
                                    -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
					<execution>
						<id>lib-jar</id>
						<phase>package</phase>
						<goals>
							<goal>bundle</goal>
						</goals>
						<configuration>
							<instructions>
								<Bundle-SymbolicName>org.talend.daikon.lib</Bundle-SymbolicName>
								<Bundle-Name>${project.name} lib</Bundle-Name>
								<DynamicImport-Package>*</DynamicImport-Package>
                                <Import-Package>com.cedarsoftware.*;resolution:=optional,com.fasterxml.*;resolution:=optional,org.apache.*;resolution:=optional,*</Import-Package>
							</instructions>
						</configuration>
					</execution>
					<execution>
						<id>test-bundle</id>
						<phase>package</phase>
						<goals>
							<goal>bundle</goal>
						</goals>
						<configuration>
							<classifier>tests</classifier>
							<!-- removes the main classes we only want test classes -->
							<outputDirectory>unexisting_ouput_directory_to_avoid_classes_to_be_embedded</outputDirectory>
							<instructions>
								<!-- <Service-Component>*</Service-Component> -->
								<Import-Package>org.talend*,org.junit*,org.hamcrest*</Import-Package>
								<Bundle-SymbolicName>org.talend.daikon.test</Bundle-SymbolicName>
								<Bundle-Name>${project.name} test</Bundle-Name>
								<Fragment-Host>org.talend.daikon</Fragment-Host>
								<Embed-Transitive>true</Embed-Transitive>
								<Embed-Dependency>*;scope=test;artifactId=!hamcrest-core|junit</Embed-Dependency>
								<Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
								<Export-Package>org.talend.daikon*</Export-Package>
								<!-- include test classes -->
								<Include-Resource>=target/test-classes/</Include-Resource>
							</instructions>
						</configuration>
					</execution>
					<execution>
						<id>bundle-jar</id>
						<phase>package</phase>
						<goals>
							<goal>bundle</goal>
						</goals>
						<configuration>
							<classifier>bundle</classifier>
							<instructions>
								<Bundle-SymbolicName>org.talend.daikon</Bundle-SymbolicName>
								<DynamicImport-Package>*</DynamicImport-Package>
								<Service-Component>*</Service-Component>
								<Embed-Transitive>true</Embed-Transitive>
								<Embed-Dependency>*;artifactId=paranamer|snappy-java|commons-compress|xz;inline=true</Embed-Dependency>
                                <Import-Package>com.cedarsoftware.*;resolution:=optional,com.fasterxml.*;resolution:=optional,org.apache.*;resolution:=optional,*</Import-Package>
							</instructions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
